@page "/"

<div class="bakery-map">
@foreach (var y in Enumerable.Range(0, GameState.Bakery.MapSize))
{
    <div class="row">
        @foreach (var x in Enumerable.Range(0, GameState.Bakery.MapSize))
        {
            var tile = GameState.Bakery.Tiles.FirstOrDefault(t => t.X == x && t.Y == y);
            if (tile != null)
            {
                <TileComponent Tile="tile" OnTileClicked="HandleTileClick" />
            }
        }
    </div>
}

</div>

@if (ModalService.IsBuildModalOpen)
{
    <BuildModal Tile="ModalService.SelectedTileForBuild" />
}

@if (ModalService.IsProductionModalOpen)
{
    <ProductionModal />
}

@if (ModalService.IsWarehouseModalOpen)
{
    <WarehouseModal />
}

@if (ModalService.IsShopModalOpen)
{
    <ShopModal />
}

@if (ModalService.IsUpgradesModalOpen)
{
    <UpgradesModal />
}

@if (ModalService.IsReportsModalOpen)
{
    <ReportsModal />
}

@if (ModalService.IsCustomerModalOpen)
{
    <CustomerModal />
}

@code {
    protected override async Task OnInitializedAsync()
    {
        ModalService.OnChange += StateHasChanged;
        await GameState.LoadGameAsync();
    }

    private void HandleTileClick(Tile tile)
    {
        if (tile.Building == null)
        {
            ModalService.OpenBuildModal(tile);
        }
        else
        {
            Console.WriteLine($"Kliknięto budynek: {tile.Building} ({tile.X}, {tile.Y})");
        }
    }

    public void Dispose()
    {
        ModalService.OnChange -= StateHasChanged;
    }
}