@implements IDisposable

<div class="modal-overlay" @onclick="Close"></div>

<div class="modal" @onclick:stopPropagation>
    <h2>📊 Raporty piekarni</h2>

    <ul class="report-list">
        <li><strong>Sprzedane wypieki:</strong> @TotalProductsSold</li>
        <li><strong>Obsłużeni klienci:</strong> @GameState.Bakery.CustomersHistory.Count</li>
        <li><strong>Zadowolenie klientów:</strong> @GameState.Bakery.CustomerSatisfaction %</li>
        <li><strong>Stan konta:</strong> @GameState.Bakery.Money.ToString("0.00") zł</li>
    </ul>

    <h4>Najczęściej sprzedawane produkty:</h4>
    <ul>
        @foreach (var item in TopProducts)
        {
            <li>@item.Name: @item.QuantitySold sprzedanych</li>
        }
    </ul>
</div>

@code {
    protected override void OnInitialized() => GameState.OnChange += StateHasChanged;
    public void Dispose() => GameState.OnChange -= StateHasChanged;

    private void Close() => ModalService.CloseModal();

    private int TotalProductsSold => GameState.Bakery.Products.Sum(p => p.QuantitySold);

    private List<Product> TopProducts => GameState.Bakery.Products
        .Where(p => p.QuantitySold > 0)
        .OrderByDescending(p => p.QuantitySold)
        .Take(5)
        .ToList();
}
