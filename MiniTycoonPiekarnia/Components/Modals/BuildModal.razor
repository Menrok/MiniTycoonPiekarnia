@implements IDisposable

<div class="modal-overlay" @onclick="Close"></div>

<div class="modal" @onclick:stopPropagation>
    <div class="building-options">
        <div class="building-card" @onclick="() => StartPlacement(BuildingType.Oven)">
            <img src="images/building/piec.png" alt="Piec" />
            <div class="label">Piec</div>
            <div class="price">200 zł</div>
        </div>
        <div class="building-card" @onclick="() => StartPlacement(BuildingType.Shelf)">
            <img src="images/building/polka.png" alt="Półka" />
            <div class="label">Półka</div>
            <div class="price">100 zł</div>
        </div>
        <div class="building-card" @onclick="() => StartPlacement(BuildingType.Website)">
            <img src="images/building/witryna.png" alt="Witryna chłodnicza" />
            <div class="label">Witryna chłodnicza</div>
            <div class="price">150 zł</div>
        </div>
    </div>
    <ErrorPopup Message="@popup.Message" Visible="@popup.Visible" FadeOut="@popup.FadeOut" />
</div>

@code {
    private ErrorPopupController popup = new();
    private int rotation = 0;

    protected override void OnInitialized() => GameState.OnChange += StateHasChanged;
    public void Dispose() => GameState.OnChange -= StateHasChanged;

    private void Close() => ModalService.CloseModal();

    private void RotateLeft() => rotation = (rotation + 90) % 360;

    private void StartPlacement(BuildingType type)
    {
        var cost = GetBuildingCost(type);

        if (GameState.Bakery.Money < cost)
        {
            _ = popup.ShowError("Za mało pieniędzy.");
            return;
        }

        GameState.StartBuildingPlacement(new BuildingPlacement
            {
                Type = type,
                Rotation = rotation,
                Cost = cost
            });

        ModalService.CloseModal();
    }

    private decimal GetBuildingCost(BuildingType building) => building switch
    {
        BuildingType.Oven => 200m,
        BuildingType.Shelf => 100m,
        BuildingType.Website => 150m,
        _ => 0m
    };
}